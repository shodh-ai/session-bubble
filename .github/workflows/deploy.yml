name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NAME }}
  GKE_ZONE: ${{ secrets.GKE_CLUSTER_ZONE }}
  IMAGE: session-bubble
  DEPLOYMENT_NAME: session-bubble

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    # Add permissions for the new authentication method
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # CORRECTED AUTHENTICATION FLOW
      - name: Authenticate to Google Cloud
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          # The input name is 'credentials_json', not 'service_account_key'
          credentials_json: "${{ secrets.GKE_SA_KEY }}"

      - name: Set up gcloud CLI
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: ${{ env.PROJECT_ID }}

      # This step depends on the previous two steps succeeding
      - name: Get GKE credentials
        uses: "google-github-actions/get-gke-credentials@v2"
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          project_id: ${{ env.PROJECT_ID }}
          # The 'credentials' input is removed as it's now handled automatically

      # Docker configuration now relies on the authenticated gcloud
      - name: Configure Docker authentication
        run: |
          gcloud auth configure-docker gcr.io --quiet

      - name: Build Docker image
        run: |
          docker build -t "gcr.io/$PROJECT_ID/$IMAGE:${{ github.sha }}" .

      - name: Push Docker image
        run: |
          docker push "gcr.io/$PROJECT_ID/$IMAGE:${{ github.sha }}"

      # USING THE ROBUST DEPLOYMENT STRATEGY
      - name: Deploy to GKE
        run: |
          # Make sure you have a k8s/deployment.yaml file in your repository!
          # This command replaces the placeholder image tag with the real one
          sed -i "s|:placeholder|:${{ github.sha }}|g" k8s/deployment.yaml

          # This command replaces the placeholder project ID
          sed -i "s|gcr.io/your-gke-project-id|gcr.io/${PROJECT_ID}|g" k8s/deployment.yaml

          # apply will create or update the deployment
          kubectl apply -f k8s/deployment.yaml

          # Wait for the rollout to complete
          kubectl rollout status deployment/${DEPLOYMENT_NAME}
