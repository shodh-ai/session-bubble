name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NAME }}
  GKE_ZONE: ${{ secrets.GKE_CLUSTER_ZONE }}
  IMAGE: session-bubble
  DEPLOYMENT_NAME: session-bubble

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - name: Configure Docker authentication
        run: gcloud --quiet auth configure-docker

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          project_id: ${{ secrets.GKE_PROJECT }}
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Build Docker image
        run: |
          docker build -t "gcr.io/$PROJECT_ID/$IMAGE:${{ github.sha }}" .

      - name: Push Docker image
        run: |
          docker push "gcr.io/$PROJECT_ID/$IMAGE:${{ github.sha }}"

      - name: Deploy to GKE (Declarative)
        run: |
          # Replace the placeholder in the deployment manifest with the real image tag and project ID
          sed -i "s|:placeholder|:${{ github.sha }}|g" k8s/deployment.yaml
          sed -i "s|gcr.io/your-gke-project-id|gcr.io/${PROJECT_ID}|g" k8s/deployment.yaml

          # Apply the manifest. This is idempotent and declarative.
          kubectl apply -f k8s/deployment.yaml

          # Wait for the rollout to complete
          kubectl rollout status deployment/${DEPLOYMENT_NAME}
